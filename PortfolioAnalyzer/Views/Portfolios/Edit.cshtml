@model PortfolioAnalyzer.Models.ViewModels.PortfolioEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Portfolio</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Portfolio.Id" />
            <div class="form-group">
                <label asp-for="Portfolio.Name" class="control-label"></label>
                <input asp-for="Portfolio.Name" class="form-control" />
                <span asp-validation-for="Portfolio.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Portfolio.Description" class="control-label"></label>
                <input asp-for="Portfolio.Description" class="form-control" />
                <span asp-validation-for="Portfolio.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Portfolio.Notes" class="control-label"></label>
                <textarea asp-for="Portfolio.Notes" class="form-control" rows="3" cols="100"></textarea>
                <span asp-validation-for="Portfolio.Notes" class="text-danger"></span>
            </div>
            <h4>Edit Securities</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Ticker</th>
                        <th>Weight</th>
                        <th>Asset Class</th>
                    </tr>
                </thead>
                <tbody class="inputTableBody">
                    @for (int i = 0; i < Model.PortfolioSecurities.Count(); i++)
                    {
                        if (Model.PortfolioSecurities[i].Weight > 0)
                        {
                            <tr>
                                <td>
                                    <input asp-for="@Model.PortfolioSecurities[i].Security.Ticker" class="form-control" />
                                </td>
                                <td>
                                    <input asp-for="@Model.PortfolioSecurities[i].Weight" class="form-control weight_0" />
                                </td>
                                <td>
                                    <select asp-for="@Model.PortfolioSecurities[i].AssetClassId" class="form-control" asp-items=Model.AssetClassOptions></select>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

            <div>
                <p class="text-danger">@ViewData["WeightError"]</p>
            </div>
            <div>
                <button class="btn btn-primary addSecurityButton">Add Security</button>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    const inputTable = document.querySelector(".inputTableBody");
    const addButton = document.querySelector(".addSecurityButton");

    addButton.addEventListener("click", event => {
        event.preventDefault();
        const i = inputTable.childElementCount;

        if (i < 9) {
            const newInputRow = document.createElement("tr")
            newInputRow.innerHTML =
                `<td>
                    <input class="form-control" type="text" id="PortfolioSecurities_${i}__Security_Ticker" name="PortfolioSecurities[${i}].Security.Ticker" value="" />
                 </td>
                 <td>
                    <input class="form-control" type="number" id="PortfolioSecurities_${i}__Weight" name="PortfolioSecurities[${i}].Weight" value="" />
                 </td>
                 <td>
                    <select class="form-control" id="PortfolioSecurities_${i}__AssetClassId" name="PortfolioSecurities[${i}].AssetClassId">
                        <option value="1">Equities</option>
                        <option value="2">Fixed Income</option>
                        <option value="3">Commodities</option>
                        <option value="4">Precious Metals</option>
                        <option value="5">Real Estate</option>
                        <option value="6">Alternatives</option>
                        <option value="7">Cash</option>
                    </select>
                 </td>`

            inputTable.appendChild(newInputRow);
        }
        
    })

</script>


