@model PaginatedList<PortfolioAnalyzer.Models.Security>

@{
    ViewData["Title"] = "Securities";
}

<h1>Securities</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find Security: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-secondary" /> |
            <a asp-action="Index" class="link-button">
                <input type="button" class="btn btn-secondary" value="Back to Full List" />
            </a>
        </p>
    </div>
</form>

<form asp-action="AddSecurity" method="get">
    <div class="form-actions no-color">
        <p>
            Can't find what you're looking for? Add a security by ticker:
            <input type="text" name="NewTicker" value="@ViewData["NewTicker"]" />
            <input type="submit" value="Add Security" class="btn btn-secondary" />
        </p>
        <p>@ViewData["SavedMessage"]</p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Ticker
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ticker)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="link-button">
                        <input type="button" class="btn btn-secondary" value="Details" />
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

